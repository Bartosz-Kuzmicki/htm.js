return {
	getNewCell: getNewCell,
	getNewSynapse: getNewSynapse,
	isSynapseConnected: isSynapseConnected,
	updateSynapseConnected: updateSynapseConnected,
	initSynapse: initSynapse,
	isSynapseActive: isSynapseActive,
	wasSynapseActive: wasSynapseActive,
	wasSynapseActiveFromLearning: wasSynapseActiveFromLearning,
	increaseSynapsePermanence: increaseSynapsePermanence,
	decreaseSynapsePermanence: decreaseSynapsePermanence,
	getNewSegment: getNewSegment,
	initSegment: initSegment,
	createSynapse: createSynapse,
	processSegment: processSegment,
	updateSegmentPermanences: updateSegmentPermanences,
	nextSegmentTimeStep: nextSegmentTimeStep,
	wasSegmentActiveFromLearning: wasSegmentActiveFromLearning,
	deleteSegment: deleteSegment,
	getSegmentInfo: getSegmentInfo,
	setCellWasActive: setCellWasActive,
	setCellWasLearning: setCellWasLearning,
	getCellWasActive: getCellWasActive,
	getCellWasLearning: getCellWasLearning,
	getCellIsActive: getCellIsActive,
	getCellIsLearning: getCellIsLearning,
	allocateData: allocateData,
	setData: setData,
	getDataFloat: getDataFloat,
	getData: getData,
	newRegionHardcoded: newRegionHardcoded,
	newRegion: newRegion,
	getColumnFromRegion: getColumnFromRegion,
	getCellFromColumn: getCellFromColumn,
	getSegmentFromCell: getSegmentFromCell,
	getSynapseFromSegment: getSynapseFromSegment,
	getColumnIsActive: getColumnIsActive,
	getCellNumSegments: getCellNumSegments,
	getSynapseInputSource: getSynapseInputSource,
	performSpatialPooling: performSpatialPooling,
	performTemporalPooling: performTemporalPooling,
	runOnce: runOnce,
	deleteRegion: deleteRegion,
	getLastAccuracy: getLastAccuracy,
	getFloatItemFromArray: getFloatItemFromArray,
	setRegionTemporalLearning: setRegionTemporalLearning,
	numRegionActiveColumns: numRegionActiveColumns,
	getRegionNumColumns: getRegionNumColumns,
	getRegionInhibitionRadius: getRegionInhibitionRadius,
	getColumnPredictions: getColumnPredictions,
	printArr: printArr,
	setDataArr: setDataArr,
	getRandomInt: getRandomInt,
	free: Module._free,
	malloc: Module._malloc
};
})();